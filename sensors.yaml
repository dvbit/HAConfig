#
#Creates sensors that provide information about various sun related events.
#https://github.com/pnbruckner/ha-sun2

  - platform: sun2
    monitored_conditions:
      - solar_midnight
      - astronomical_dawn
      - nautical_dawn
      - dawn
      - sunrise
      - solar_noon
      - sunset
      - dusk
      - nautical_dusk
      - astronomical_dusk
      - daylight
      - civil_daylight
      - nautical_daylight
      - astronomical_daylight
      - night
      - civil_night
      - nautical_night
      - astronomical_night
      - max_elevation

#########################################
#
# Wunderground
#
##########################################

  - platform: wundergroundpws
    api_key: !secret wundergroundapikey
    pws_id: IBRACC1
    lang: it-IT
    monitored_conditions:
      - stationID
      - solarRadiation
      - neighborhood
      - obsTimeLocal
      - uv
      - winddir
      - humidity
      - dewpt
      - heatIndex
      - windChill
      - elev
      - precipTotal
      - precipRate
      - pressure
      - temp
      - windGust
      - windSpeed
      - precip_1d
      - precip_chance_1d
      - temp_high_1d
      - temp_low_1d
      - wind_1d
      - weather_1d
      - weather_1n
      - weather_2d
      - weather_2n
      - weather_3d
      - weather_3n
      - weather_4d
      - weather_4n
      - weather_5d
      - weather_5n
      
#############################################################################################################################
#
# mqtt 
#
#############################################################################################################################

  - platform: mqtt
    state_topic: "emon/emonpi/power1"
    name: "Scambio Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/emonpi/power2"
    name: "Produzione Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/emonpi/power1pluspower2"
    name: "Consumo Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct1"
    name: "Piastra"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct2"
    name: "Forno"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct3"
    name: "Lavastoviglie"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/laundry/ct1"
    name: "Lavatrice"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/laundry/ct2"
    name: "Asciugatrice"
    unit_of_measurement: "W"

##########################################
# Command Line  
##########################################

  - platform: command_line
    name : remoteserial
    command : "systemctl status remserial.service | grep active"

  - platform: command_line
    name : mosquitto
    command : "systemctl status mosquitto.service | grep active"

  - platform: command_line
    name : appdaemon
    command : "systemctl status appdaemon@reinan.service | grep active"

  - platform: command_line
    name : grafana
    command : "systemctl status grafana-server.service | grep active"

  - platform: command_line
    name : mariadb
    command : "systemctl status mariadb.service | grep active"

  - platform: command_line
    name : appdaemon
    command : "systemctl status appdaemon@reinan.service | grep active"

  - platform: command_line
    name : nodered
    command : "systemctl status nodered | grep active"

#########################################
# Harmony Status
#########################################

  - platform: template
    sensors:
      media:
        value_template: '{{ states.remote.harmony.attributes.current_activity }}'
        friendly_name: "Televisione Soggiorno"


#############################################################################################################################
#
#  Sensori Energia
#
#############################################################################################################################
      consumo_infrastruttura:
        value_template: '{% if states.switch.infrastruttura.attributes["load_power"] is defined %}{{ (states.switch.infrastruttura.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Infrastruttura
      consumo_altro_salone:
        value_template: '{% if states.switch.altro_salone.attributes["load_power"] is defined %}{{ (states.switch.altro_salone.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Altro Salone
      consumo_family_entertainment:
        value_template: '{% if states.switch.family_entertainment.attributes["load_power"] is defined %}{{ (states.switch.family_entertainment.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Family Entertainment

#########################################
# Climate Temp Extractions
#########################################
      temperatura_att_casa:
        value_template: '{{ states.climate.casa.attributes.current_temperature | float}}'
      temperatura_att_alessandro:
        value_template: '{{ states.climate.alessandro.attributes.current_temperature  | float}}'
      temperatura_att_beatrice:
        value_template: '{{ states.climate.beatrice.attributes.current_temperature  | float}}'
      temperatura_att_gio_e_nic:
        value_template: '{{ states.climate.gio_e_nic.attributes.current_temperature }}'
      temperatura_att_bagno_gio_e_nic:
        value_template: '{{ states.climate.bagno_gio_e_nic.attributes.current_temperature }}'
      temperatura_att_soggiorno:
        value_template: '{{ states.climate.soggiorno.attributes.current_temperature }}'
      temperatura_att_bagno_taverna:
        value_template: '{{ states.climate.bagno_taverna.attributes.current_temperature }}'
      temperatura_att_bagno_su:
        value_template: '{{ states.climate.bagno_su.attributes.current_temperature }}'
      temperatura_att_letto_taverna:
        value_template: '{{ states.climate.letto_taverna.attributes.current_temperature }}'
      temperatura_att_salone_taverna:
        value_template: '{{ states.climate.salone_taverna.attributes.current_temperature }}'
      temperatura_att_studio:
        value_template: '{{ states.climate.studio.attributes.current_temperature }}'

#
#      temperatura__obb_casa:
#        value_template: '{{ states.climate.casa.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_alessandro:
#        value_template: '{{ states.climate.alessandro.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_beatrice:
#        value_template: '{{ states.climate.beatrice.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_gio_e_nic:
#        value_template: '{{ states.climate.gio_e_nic.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_bagno_gio_e_nic:
#        value_template: '{{ states.climate.bagno_gio_e_nic.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_bagno_taverna:
#        value_template: '{{ states.climate.bagno_taverna.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_bagno_su:
#        value_template: '{{ states.climate.bagno_su.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_letto_taverna:
#        value_template: '{{ states.climate.letto_taverna.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_salone_taverna:
#        value_template: '{{ states.climate.salone_taverna.attributes.status.setpointStatus.targetHeatTemperature }}'
#      temperatura__obb_studio:
#        value_template: '{{ states.climate.studio.attributes.status.setpointStatus.targetHeatTemperature }}'

#############################################################################################################################
#
#  OpenGarage
#
#############################################################################################################################

      garage_status:
        friendly_name: 'Basculante Garage'
        value_template: '{% if states.cover.my_opengarage %}
            {% if states.cover.my_opengarage.attributes["door_state"] == "open" %}
              Open
            {% elif states.cover.my_opengarage.attributes["door_state"] == "closed" %}
              Closed
            {% elif states.cover.my_opengarage.attributes["door_state"] == "opening" %}
              Opening
            {% elif states.cover.my_opengarage.attributes["door_state"] == "closing" %}
              Closing
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage_car_present:
        friendly_name: 'Auto in Garage'
        value_template: '{% if states.cover.my_opengarage %}
            {% if states.cover.my_opengarage.state == "open" %}
              n/a
            {% elif ((states.cover.my_opengarage.attributes["distance_sensor"] > 50) and (states.cover.my_opengarage.attributes["distance_sensor"] < 150)) %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'

      tavolettawc:
         friendly_name: vibrate_sensor_action
         value_template: '{{ states.binary_sensor.vibration_158d0002a22bc6.attributes["last_action"] }}'