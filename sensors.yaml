#
#Creates sensors that provide information about various sun related events.
#https://github.com/pnbruckner/ha-sun2

  - platform: sun2
    monitored_conditions:
      - solar_midnight
      - astronomical_dawn
      - nautical_dawn
      - dawn
      - sunrise
      - solar_noon
      - sunset
      - dusk
      - nautical_dusk
      - astronomical_dusk
      - daylight
      - civil_daylight
      - nautical_daylight
      - astronomical_daylight
      - night
      - civil_night
      - nautical_night
      - astronomical_night
      - max_elevation

#########################################
#
# Wunderground
#
##########################################

  - platform: wundergroundpws
    api_key: !secret wundergroundapikey
    pws_id: IBRACC1
    lang: it-IT
    monitored_conditions:
      - stationID
      - solarRadiation
      - neighborhood
      - obsTimeLocal
      - uv
      - winddir
      - humidity
      - dewpt
      - heatIndex
      - windChill
      - elev
      - precipTotal
      - precipRate
      - pressure
      - temp
      - windGust
      - windSpeed
      - precip_1d
      - precip_chance_1d
      - temp_high_1d
      - temp_low_1d
      - wind_1d
      - weather_1d
      - weather_1n
      - weather_2d
      - weather_2n
      - weather_3d
      - weather_3n
      - weather_4d
      - weather_4n
      - weather_5d
      - weather_5n
      
#############################################################################################################################
#
# mqtt 
#
#############################################################################################################################

  - platform: mqtt
    state_topic: "emon/emonpi/power1"
    name: "Scambio Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/emonpi/power2"
    name: "Produzione Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/emonpi/power1pluspower2"
    name: "Consumo Casa"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct1"
    name: "Consumo Piano Induzione"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct2"
    name: "Consumo Forno"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/kitchen/ct3"
    name: "Consumo Lavastoviglie"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/laundry/ct1"
    name: "Consumo Lavatrice"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: "emon/laundry/ct2"
    name: "Consumo Asciugatrice"
    unit_of_measurement: "W"

  - platform: mqtt
    state_topic: 'monitor/PianoTerra/alias'
    value_template: '{{ value_json.confidence }}'
    unit_of_measurement: '%'
    name: 'Presenza Piano Terra'

# Prese Blitzwolf

# Presa TV Ale BW1
  - platform: mqtt
    name: "Entertainment Alessandro: Energia Oggi"
    state_topic: "tele/entertainmentalessandro/SENSOR"
    value_template: "{{ value_json.ENERGY.Today }}"
    availability_topic: "tele/entertainmentalessandro/LWT"
    unit_of_measurement: "kWh"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Alessandro: Energia Ieri"
    state_topic: "tele/entertainmentalessandro/SENSOR"
    value_template: "{{ value_json.ENERGY.Yesterday }}"
    availability_topic: "tele/entertainmentalessandro/LWT"
    unit_of_measurement: "kWh"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Alessandro: Energia Totale"
    state_topic: "tele/entertainmentalessandro/SENSOR"
    value_template: "{{ value_json.ENERGY.Total }}"
    availability_topic: "tele/entertainmentalessandro/LWT"
    unit_of_measurement: "kWh"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Alessandro: Potenza"
    state_topic: "tele/entertainmentalessandro/SENSOR"
    value_template: "{{ value_json.ENERGY.Power }}"
    availability_topic: "tele/entertainmentalessandro/LWT"
    unit_of_measurement: "W"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Alessandro: Tensione"
    state_topic: "tele/entertainmentalessandro/SENSOR"
    value_template: "{{ value_json.ENERGY.Voltage }}"
    availability_topic: "tele/entertainmentalessandro/LWT"
    unit_of_measurement: "V"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Alessandro: Fattore Potenza"
    state_topic: "tele/entertainmentalessandro/SENSOR"
    value_template: "{{ value_json.ENERGY.Factor }}"
    availability_topic: "tele/entertainmentalessandro/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Beatrice: Segnale WiFi"
    icon: mdi:wifi
    state_topic: "tele/entertainmentBeatrice/STATE"
    value_template: "{{ value_json.Wifi.RSSI }}"
    availability_topic: "tele/entertainmentBeatrice/LWT"
    unit_of_measurement: "%"
    payload_available: "Online"
    payload_not_available: "Offline"

# Presa TV Bea BW2
  - platform: mqtt
    name: "Entertainment Beatrice: Energia Oggi"
    state_topic: "tele/entertainmentBeatrice/SENSOR"
    value_template: "{{ value_json.ENERGY.Today }}"
    availability_topic: "tele/entertainmentbeatrice/LWT"
    unit_of_measurement: "kWh"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Beatrice: Energia Ieri"
    state_topic: "tele/entertainmentBeatrice/SENSOR"
    value_template: "{{ value_json.ENERGY.Yesterday }}"
    availability_topic: "tele/entertainmentbeatrice/LWT"
    unit_of_measurement: "kWh"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Beatrice: Energia Totale"
    state_topic: "tele/entertainmentBeatrice/SENSOR"
    value_template: "{{ value_json.ENERGY.Total }}"
    availability_topic: "tele/entertainmentbeatrice/LWT"
    unit_of_measurement: "kWh"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Beatrice: Potenza"
    state_topic: "tele/entertainmentbeatrice/SENSOR"
    value_template: "{{ value_json.ENERGY.Power }}"
    availability_topic: "tele/entertainmentbeatrice/LWT"
    unit_of_measurement: "W"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Beatrice: Tensione"
    state_topic: "tele/entertainmentBeatrice/SENSOR"
    value_template: "{{ value_json.ENERGY.Voltage }}"
    availability_topic: "tele/entertainmentbeatrice/LWT"
    unit_of_measurement: "V"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Beatrice: Fattore Potenza"
    state_topic: "tele/entertainmentbeatrice/SENSOR"
    value_template: "{{ value_json.ENERGY.Factor }}"
    availability_topic: "tele/entertainmentbeatrice/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
    
  - platform: mqtt
    name: "Entertainment Beatrice: Segnale WiFi"
    icon: mdi:wifi
    state_topic: "tele/entertainmentbeatrice/STATE"
    value_template: "{{ value_json.Wifi.RSSI }}"
    availability_topic: "tele/entertainmentbeatrice/LWT"
    unit_of_measurement: "%"
    payload_available: "Online"
    payload_not_available: "Offline"

  - platform: mqtt
    name: "DahuaVTO CallNoAnswered Event"
    state_topic: "DahuaVTO/CallNoAnswered/Event"
    value_template: "{{ value_json.Action }}"

  - platform: mqtt
    name: "DahuaVTO IgnoreInvite Event"
    state_topic: "DahuaVTO/IgnoreInvite/Event"
    value_template: "{{ value_json.Action }}"

  - platform: mqtt
    name: "DahuaVTO VideoMotion Event"
    state_topic: "DahuaVTO/VideoMotion/Event"
    value_template: "{{ value_json.Action }}"

  - platform: mqtt
    name: "DahuaVTO RtspSessionDisconnect Event"
    state_topic: "DahuaVTO/RtspSessionDisconnect/Event"
    value_template: "{{ value_json.Action }}"

  - platform: mqtt
    name: "DahuaVTO BackKeyLight Event"
    state_topic: "DahuaVTO/BackKeyLight/Event"
    value_template: "{{ value_json.Action }}"

  - platform: mqtt
    name: "DahuaVTO AccessControl Event"
    state_topic: "DahuaVTO/AccessControl/Event"
    value_template: "{{ value_json.Action }}"

  - platform: mqtt
    name: "DahuaVTO CallSnap Event"
    state_topic: "DahuaVTO/CallSnap/Event"
    value_template: "{{ value_json.Action }}"

  - platform: mqtt
    name: "DahuaVTO Invite Event"
    state_topic: "DahuaVTO/Invite/Event"
    value_template: "{{ value_json.Action }}"

#manual zigbww2mqtt

#sensor:
#  - platform: "mqtt"
#    state_topic: "zigbee2mqtt/Clima Bagno Camera da Letto"
#    availability_topic: "zigbee2mqtt/bridge/state"
#    unit_of_measurement: "Â°C"
#    device_class: "temperature"
#    value_template: "{{ value_json.temperature }}"
#
#
#sensor:
#  - platform: "mqtt"
#    state_topic: "zigbee2mqtt/Clima Bagno Camera da Letto"
#    availability_topic: "zigbee2mqtt/bridge/state"
#    unit_of_measurement: "%"
#    device_class: "humidity"
#    value_template: "{{ value_json.humidity }}"
#
#sensor:
#  - platform: "mqtt"
#    state_topic: "zigbee2mqtt/Clima Bagno Camera da Letto"
#    availability_topic: "zigbee2mqtt/bridge/state"
#    unit_of_measurement: "%"
#    device_class: "battery"
#    value_template: "{{ value_json.battery }}"
#
#sensor:
#  - platform: "mqtt"
#    state_topic: "zigbee2mqtt/Clima Bagno Camera da Letto"
#    availability_topic: "zigbee2mqtt/bridge/state"
#    icon: "mdi:signal"
#    unit_of_measurement: "lqi"
#    value_template: "{{ value_json.linkquality }}"

##########################################
# Command Line  
##########################################

  - platform: command_line
    name : remoteserial
    command : "systemctl status remserial.service | grep active"

  - platform: command_line
    name : mosquitto
    command : "systemctl status mosquitto.service | grep active"

  - platform: command_line
    name : appdaemon
    command : "systemctl status appdaemon@reinan.service | grep active"

  - platform: command_line
    name : grafana
    command : "systemctl status grafana-server.service | grep active"

  - platform: command_line
    name : mariadb
    command : "systemctl status mariadb.service | grep active"

  - platform: command_line
    name : appdaemon
    command : "systemctl status appdaemon@reinan.service | grep active"

  - platform: command_line
    name : nodered
    command : "systemctl status nodered | grep active"

#########################################
# Harmony Status
#########################################

  - platform: template
    sensors:
      media:
        value_template: '{{ states.remote.harmony.attributes.current_activity }}'
        friendly_name: "Televisione Soggiorno"


#############################################################################################################################
#
#  Sensori Energia
#
#############################################################################################################################
      consumo_infrastruttura:
        value_template: '{% if states.switch.infrastruttura.attributes["load_power"] is defined %}{{ (states.switch.infrastruttura.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Infrastruttura
      consumo_altro_salone:
        value_template: '{% if states.switch.altro_salone.attributes["load_power"] is defined %}{{ (states.switch.altro_salone.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Altro Salone
      consumo_family_entertainment:
        value_template: '{% if states.switch.family_entertainment.attributes["load_power"] is defined %}{{ (states.switch.family_entertainment.attributes["load_power"] | float ) | round(0)}}{% else %}-{% endif %}'
        unit_of_measurement: 'w'
        friendly_name: Consumo Family Entertainment

#########################################
# Climate Temp Extractions
#########################################
      temperatura_att_casa:
        value_template: '{{ states.climate.casa.attributes.current_temperature | float}}'
      temperatura_att_alessandro:
        value_template: '{{ states.climate.alessandro.attributes.current_temperature  | float}}'
      temperatura_att_beatrice:
        value_template: '{{ states.climate.beatrice.attributes.current_temperature  | float}}'
      temperatura_att_gio_e_nic:
        value_template: '{{ states.climate.gio_e_nic.attributes.current_temperature }}'
#      temperatura_att_bagno_gio_e_nic:
#        value_template: '{{ states.climate.bagno_gio_e_nic.attributes.current_temperature }}'
      temperatura_att_soggiorno:
        value_template: '{{ states.climate.soggiorno.attributes.current_temperature }}'
      temperatura_att_bagno_taverna:
        value_template: '{{ states.climate.bagno_taverna.attributes.current_temperature }}'
      temperatura_att_bagno_su:
        value_template: '{{ states.climate.bagno_su.attributes.current_temperature }}'
      temperatura_att_letto_taverna:
        value_template: '{{ states.climate.letto_taverna.attributes.current_temperature }}'
      temperatura_att_salone_taverna:
        value_template: '{{ states.climate.salone_taverna.attributes.current_temperature }}'
      temperatura_att_studio:
        value_template: '{{ states.climate.studio.attributes.current_temperature }}'


 #     temperatura__obb_casa:
 #       value_template: '{{ states.climate.casa.attributes.status.setpoint_status.target_heat_temperature}}'
 #     temperatura__obb_alessandro:
 #       value_template: '{{ states.climate.alessandro..attributes.status.setpoint_status.target_heat_temperature}}'
 #     temperatura__obb_beatrice:
 #       value_template: '{{ states.climate.beatrice.attributes.status.setpoint_status.target_heat_temperature }}'
 #     temperatura__obb_gio_e_nic:
 #       value_template: '{{ states.climate.gio_e_nic.attributes.status.setpoint_status.target_heat_temperature }}'
##      temperatura__obb_bagno_gio_e_nic:
##        value_template: '{{ states.climate.bagno_gio_e_nic.attributes.status.setpoint_status.target_heat_temperature }}'
 #     temperatura__obb_bagno_taverna:
 #       value_template: '{{ states.climate.bagno_taverna.attributes.status.setpoint_status.target_heat_temperature }}'
 #     temperatura__obb_bagno_su:
 #       value_template: '{{ states.climate.bagno_su.attributes.status.setpoint_status.target_heat_temperature }}'
 #     temperatura__obb_letto_taverna:
 #       value_template: '{{ states.climate.letto_taverna.attributes.status.setpoint_status.target_heat_temperature }}'
 #     temperatura__obb_salone_taverna:
 #       value_template: '{{ states.climate.salone_taverna.attributes.status.setpoint_status.target_heat_temperature }}'
 #     temperatura__obb_studio:
 #       value_template: '{{ states.climate.studio.attributes.status.setpoint_status.target_heat_temperature }}'

#############################################################################################################################
#
#  OpenGarage
#
#############################################################################################################################

      garage_status:
        friendly_name: 'Basculante Garage'
        value_template: '{% if states.cover.my_opengarage %}
            {% if states.cover.my_opengarage.attributes["door_state"] == "open" %}
              Open
            {% elif states.cover.my_opengarage.attributes["door_state"] == "closed" %}
              Closed
            {% elif states.cover.my_opengarage.attributes["door_state"] == "opening" %}
              Opening
            {% elif states.cover.my_opengarage.attributes["door_state"] == "closing" %}
              Closing
            {% else %}
              Unknown
            {% endif %}
            {% else %}
            n/a
            {% endif %}'
      garage_car_present:
        friendly_name: 'Auto in Garage'
        value_template: '{% if states.cover.my_opengarage %}
            {% if states.cover.my_opengarage.state == "open" %}
              n/a
            {% elif ((states.cover.my_opengarage.attributes["distance_sensor"] > 50) and (states.cover.my_opengarage.attributes["distance_sensor"] < 150)) %}
              Yes
            {% else %}
              No
            {% endif %}
            {% else %}
            n/a
            {% endif %}'

      tavolettawc:
         friendly_name: vibrate_sensor_action
         value_template: '{{ states.binary_sensor.vibration_158d0002a22bc6.attributes["last_action"] }}'
      
#      lights_on:
#        friendly_name: 'Luci Accese'
#        value_template: {{ states | selectattr('entity_id','in', ['light.list_your_lights_here','switch.example_1','switch.example_2'] )|selectattr('state','eq','on') | list | count }}


  - platform: attributes
    friendly_name: "Last changed"
    attribute: last_triggered
    icon: 'mdi:clock'
    time_format: '%e %B - %H:%M:%S'
    entities:
      - binary_sensor.movimento_letto_giovanna_motion
      - binary_sensor.movimento_letto_nicola_motion

  - platform: feedparser
    name: Engineering Feed
    feed_url: 'https://www.sciencedaily.com/rss/matter_energy/engineering.xml'
    date_format: '%a, %b %d %I:%M %p'
    inclusions:
     - title
     - link
     - description
     - image
     - language
     - pubDate
    exclusions:
     - language

  - platform: attributes
    friendly_name: "Batteries"
    attribute: battery
    unit_of_measurement: "%"
    entities:
      - sensor.humidity_158d00016d0abc
      - sensor.humidity_158d00016d0aed
      - sensor.illumination_158d00024e6ca2
      - sensor.illumination_158d00024e6ca3
      - sensor.illumination_158d00024e7487
      - sensor.illumination_7811dcb22b4e
      - sensor.movimento_bagno_piano_light_level
  
#  - platform: min_max
#    name: "Presenza in Casa"
#    type: max
#    round_digits: 0
#    entity_ids:
#      - sensor.PianoTerra
#      - sensor.PianoTerra
#      - sensor.second_floor
#      - sensor.first_floor
#      - sensor.garage

  - platform: yr
    monitored_conditions:
      - symbol
  - platform: illuminance
    name: YRS Illuminance
    entity_id: sensor.yr_symbol

  - platform: darksky
    api_key: !secret darkskyapi
    forecast:
      - 0
    hourly_forecast:
      - 0
      - 1
    monitored_conditions:
      - summary
      - icon
      - temperature


  - platform: cups
    host: !secret cupsserver    
    port: 631
    printers:
      - "Officejet_Pro_8600_CA8FDE_"
